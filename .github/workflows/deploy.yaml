name: Build and Deploy to GCP

on:
  push:
    branches:
      - test-workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t guilherm124/navgo-api:latest .

    - name: Push Docker image to Docker Hub
      run: |
        docker push guilherm124/navgo-api:latest

    - name: Debug Docker build output
      run: |
        echo "Docker Build Output"
        docker images
        docker image inspect guilherm124/navgo-api:latest || echo "Image not found"

    - name: Verify Docker image exists
      run: |
        if ! docker images guilherm124/navgo-api:latest | grep -q 'latest'; then
          echo "Docker image guilherm124/navgo-api:latest not found"
          exit 1
        fi

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: 'latest'
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Authenticate Docker to Google Container Registry
      run: gcloud auth configure-docker
    
    - name: Enable Artifact Registry API
      run: |
        gcloud services enable artifactregistry.googleapis.com
        echo "Artifact Registry API enabled"

    - name: Push image to Google Container Registry
      run: |
        docker tag guilherm124/navgo-api:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/navgo-api:latest
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/navgo-api:latest

    - name: Deploy to Google Cloud Run
      run: |
        gcloud run deploy navgo-api-service \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/navgo-api:latest \
          --region us-central1 \
          --platform managed \
          --allow-unauthenticated
